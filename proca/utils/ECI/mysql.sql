/*Table structure for table oct_lang */

CREATE TABLE OCT_LANG (
  id BIGINT(20) NOT NULL,
  CODE VARCHAR(3) NOT NULL,
  NAME VARCHAR(64) NOT NULL,
  display_order BIGINT(20) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY CODE (CODE),
  UNIQUE KEY NAME (NAME),
  UNIQUE KEY display_order (display_order)
);

/*Data for the table oct_lang */

INSERT  INTO OCT_LANG(id,CODE,NAME,display_order) VALUES
(1,'cs','oct.lang.Czech',2),
(2,'da','oct.lang.Danish',3),
(3,'de','oct.lang.German',4),
(4,'et','oct.lang.Estonian',5),
(5,'el','oct.lang.Greek',6),
(6,'en','oct.lang.English',7),
(7,'es','oct.lang.Spanish',8),
(8,'fr','oct.lang.French',9),
(9,'it','oct.lang.Italian',411),
(10,'lv','oct.lang.Latvian',412),
(11,'lt','oct.lang.Lithuanian',413),
(12,'ga','oct.lang.Gaelic',10),
(13,'hu','oct.lang.Hungarian',414),
(14,'mt','oct.lang.Maltese',415),
(15,'nl','oct.lang.Dutch',416),
(16,'pl','oct.lang.Polish',417),
(17,'pt','oct.lang.Portuguese',418),
(18,'ro','oct.lang.Romanian',419),
(19,'sk','oct.lang.Slovak',420),
(20,'sl','oct.lang.Slovenian',421),
(21,'fi','oct.lang.Finnish',422),
(22,'sv','oct.lang.Swedish',423),
(23,'bg','oct.lang.Bulgarian',1),
(24,'hr','oct.lang.Croatian',11);

/*Table structure for table oct_initiative_desc */

CREATE TABLE OCT_INITIATIVE_DESC (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  objectives VARCHAR(1100),
  title VARCHAR(500) NOT NULL,
  url VARCHAR(150) DEFAULT NULL,
  language_id BIGINT(20) NOT NULL,
  isDefault INT(4) DEFAULT NULL,
  partialRegistration VARCHAR(800),
  PRIMARY KEY (id),
  UNIQUE KEY language_id (language_id),
  KEY FK136443A5513A6710 (language_id),
  CONSTRAINT FK136443A5513A6710 FOREIGN KEY (language_id) REFERENCES OCT_LANG (id)
);


/*Table structure for table oct_system_prefs */

CREATE TABLE OCT_SYSTEM_PREFS (
  id BIGINT(20) NOT NULL,
  state VARCHAR(255) DEFAULT NULL,
  collecting TINYINT(4) DEFAULT NULL,
  registrationNumber VARCHAR(64) DEFAULT NULL,
  registrationDate DATETIME DEFAULT NULL,
  deadline DATETIME DEFAULT NULL,
  commissionRegisterUrl VARCHAR(500),
  currentAnnexRevision BIGINT(20) NOT NULL,
  FILE_STORE VARCHAR(255) DEFAULT NULL,
  CERT_FILE_NAME VARCHAR(255) DEFAULT NULL,
  CERT_CONTENT_TYPE VARCHAR(255) DEFAULT NULL,
  partiallyregistered TINYINT(4) DEFAULT NULL,
  publicKey VARCHAR(2000),
  PRIMARY KEY (id),
  UNIQUE KEY CERT_CONTENT_TYPE (CERT_CONTENT_TYPE),
  UNIQUE KEY CERT_FILE_NAME (CERT_FILE_NAME),
  UNIQUE KEY registrationDate (registrationDate),
  UNIQUE KEY registrationNumber (registrationNumber)
);

INSERT INTO OCT_SYSTEM_PREFS (ID, STATE, COLLECTING, REGISTRATIONNUMBER, REGISTRATIONDATE, DEADLINE, COMMISSIONREGISTERURL, FILE_STORE, CURRENTANNEXREVISION, CERT_FILE_NAME, CERT_CONTENT_TYPE, PARTIALLYREGISTERED, PUBLICKEY)
values (1, 'DEPLOYED', 1, null, null, null, null, null, 2, null, null, 0, null);

CREATE TABLE OCT_ACCOUNT (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  passHash VARCHAR(255) NOT NULL,
  userName VARCHAR(255) NOT NULL,
  salt VARCHAR(255) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY userName (userName)
);


/*Table structure for table oct_property_group */
CREATE TABLE OCT_PROPERTY_GROUP (
  id BIGINT(20) NOT NULL,
  multichoice TINYINT(4) DEFAULT NULL,
  NAME VARCHAR(64) NOT NULL,
  priority INT(11) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY NAME (NAME)
);

/*Data for the table oct_property_group */

INSERT  INTO OCT_PROPERTY_GROUP(id,multichoice,NAME,priority) VALUES
(1,0,'oct.group.general',2),
(2,0,'oct.group.address',3),
(3,1,'oct.group.id',1);

/*Table structure for table oct_property */

CREATE TABLE OCT_PROPERTY (
  id BIGINT(20) NOT NULL,
  NAME VARCHAR(64) NOT NULL,
  priority INT(11) NOT NULL,
  TYPE VARCHAR(255) DEFAULT NULL,
  group_id BIGINT(20) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY NAME (NAME),
  KEY FK789EEE34CBC45847 (group_id),
  CONSTRAINT FK789EEE34CBC45847 FOREIGN KEY (group_id) REFERENCES OCT_PROPERTY_GROUP (id)
);

/*Data for the table oct_property */

INSERT  INTO OCT_PROPERTY(id,NAME,priority,TYPE,group_id) VALUES
(1,'oct.property.street',87,'LARGETEXT',2),
(2,'oct.property.postal.code',85,'ALPHANUMERIC',2),
(3,'oct.property.city',84,'ALPHANUMERIC',2),
(4,'oct.property.country',83,'COUNTRY',2),
(5,'oct.property.date.of.birth',97,'DATE',1),
(7,'oct.property.passport',0,'ALPHANUMERIC',3),
(8,'oct.property.id.card',0,'ALPHANUMERIC',3),
(9,'oct.property.residence.permit',0,'ALPHANUMERIC',3),
(10,'oct.property.personal.number',0,'ALPHANUMERIC',3),
(11,'oct.property.personal.id',0,'ALPHANUMERIC',3),
(12,'oct.property.permanent.residence',0,'ALPHANUMERIC',3),
(13,'oct.property.national.id.number',0,'ALPHANUMERIC',3),
(14,'oct.property.registration.certificate',0,'ALPHANUMERIC',3),
(15,'oct.property.citizens.card',0,'ALPHANUMERIC',3),
(16,'oct.property.full.first.names',99,'ALPHANUMERIC',1),
(17,'oct.property.family.names',98,'ALPHANUMERIC',1),
(18,'oct.property.street.number',86,'LARGETEXT',2);

/*Table structure for table oct_country */

CREATE TABLE OCT_COUNTRY (
  id BIGINT(20) NOT NULL,
  CODE VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  threshold BIGINT(10) NOT NULL,
  CATEGORY VARCHAR(1) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY CODE (CODE),
  UNIQUE KEY NAME (NAME)
);

/*Data for the table oct_country */
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (1,'pl','oct.country.pl',36660,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (2,'de','oct.country.de',67680,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (4,'fr','oct.country.fr',55695,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (5,'be','oct.country.be',14805,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (6,'ro','oct.country.ro',23265,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (8,'at','oct.country.at',13395,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (9,'lv','oct.country.lv',5640,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (10,'bg','oct.country.bg',11985,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (11,'cy','oct.country.cy',4230,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (12,'lt','oct.country.lt',7755,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (13,'lu','oct.country.lu',4230,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (14,'mt','oct.country.mt',4230,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (15,'nl','oct.country.nl',20445,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (16,'pt','oct.country.pt',14805,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (17,'sk','oct.country.sk',9870,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (18,'si','oct.country.si',5640,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (19,'cz','oct.country.cz',14805,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (20,'dk','oct.country.dk',9870,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (21,'ee','oct.country.ee',4935,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (22,'fi','oct.country.fi',9870,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (23,'gr','oct.country.gr',14805,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (24,'es','oct.country.es',41595,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (25,'hu','oct.country.hu',14805,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (26,'ie','oct.country.ie',9165,'a');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (27,'se','oct.country.se',14805,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (28,'it','oct.country.it',53580,'b');
INSERT INTO OCT_COUNTRY(id,CODE,NAME,threshold,category) VALUES (29,'hr','oct.country.hr',8460,'b');

/*Table structure for table OCT_CONTACT_ROLE */
CREATE TABLE OCT_CONTACT_ROLE (
  id BIGINT(20) NOT NULL,
  roleDescription VARCHAR(100),
  PRIMARY KEY (id)
);

INSERT  INTO OCT_CONTACT_ROLE(id, roleDescription) VALUES
(1, 'representative'),
(2, 'substitute'),
(3, 'member'),
(4, 'entity'),
(5, 'newRepresentative'),
(6, 'newSubstitute'),
(7, 'other');

/*Table structure for table oct_contact */
CREATE TABLE OCT_CONTACT (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  firstName VARCHAR(255),
  familyName VARCHAR(255),
  email VARCHAR(255),
  contactRole_id BIGINT(20) NOT NULL,
  country_id BIGINT(20) DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT contactRoleFK FOREIGN KEY (contactRole_id) REFERENCES OCT_CONTACT_ROLE (id),
  CONSTRAINT CONTACTCOUNTRYFK FOREIGN KEY (country_id) REFERENCES OCT_COUNTRY (ID)

);

/*Table structure for table oct_country_property */
CREATE TABLE OCT_COUNTRY_PROPERTY (
  id BIGINT(20) NOT NULL,
  required TINYINT(4) DEFAULT NULL,
  country_id BIGINT(20) DEFAULT NULL,
  property_id BIGINT(20) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY FK49CFF1DD86EFF898 (property_id),
  KEY FK49CFF1DDC25D8AE4 (country_id),
  CONSTRAINT FK49CFF1DD86EFF898 FOREIGN KEY (property_id) REFERENCES OCT_PROPERTY (id),
  CONSTRAINT FK49CFF1DDC25D8AE4 FOREIGN KEY (country_id) REFERENCES OCT_COUNTRY (id)
);

/*Data for the table oct_country_property */

INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (1,1,5,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (2,1,5,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (3,1,5,13);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (4,1,27,10);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (5,1,29,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (8,1,20,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (9,1,20,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (10,1,20,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (11,1,20,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (12,1,20,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (13,1,20,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (14,1,20,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (15,1,21,10);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (16,1,21,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (17,1,21,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (18,1,23,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (19,1,23,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (20,1,23,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (22,1,22,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (23,1,22,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (24,1,22,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (25,1,22,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (26,1,22,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (27,1,22,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (28,1,22,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (29,1,2,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (30,1,2,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (31,1,2,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (32,1,2,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (33,1,2,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (34,1,2,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (35,1,2,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (36,1,26,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (37,1,26,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (38,1,26,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (39,1,26,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (40,1,26,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (41,1,26,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (42,1,26,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (43,1,13,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (44,1,13,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (45,1,13,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (46,1,13,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (47,1,13,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (48,1,13,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (49,1,13,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (50,1,15,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (51,1,15,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (52,1,15,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (53,1,15,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (54,1,15,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (55,1,15,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (56,1,15,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (71,1,8,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (72,1,8,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (73,1,8,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (74,1,8,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (75,1,10,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (76,1,10,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (77,1,10,10);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (78,1,29,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (79,1,29,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (80,1,29,11);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (81,1,11,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (82,1,11,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (83,1,11,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (84,1,11,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (85,1,19,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (86,1,19,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (87,1,19,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (88,1,19,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (89,1,4,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (90,1,4,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (91,1,4,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (92,1,4,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (64,1,4,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (6,1,4,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (7,1,4,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (93,1,23,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (94,1,23,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (95,1,23,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (96,1,23,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (97,1,25,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (98,1,25,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (99,1,25,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (100,1,25,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (101,1,25,10);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (102,1,28,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (103,1,28,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (104,1,28,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (105,1,28,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (107,1,9,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (108,1,9,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (109,1,9,11);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (110,1,12,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (111,1,12,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (112,1,12,10);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (113,1,14,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (114,1,14,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (115,1,14,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (116,1,14,9);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (117,1,1,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (118,1,1,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (119,1,1,13);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (120,1,16,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (121,1,16,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (122,1,16,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (123,1,16,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (124,1,16,15);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (125,1,6,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (126,1,6,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (127,1,6,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (128,1,6,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (129,1,6,11);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (132,1,18,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (133,1,18,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (134,1,18,10);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (135,1,24,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (136,1,24,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (137,1,24,7);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (138,1,24,8);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (140,1,27,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (141,1,27,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (142,1,17,16);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (143,1,17,17);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (144,1,17,1);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (145,1,17,18);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (146,1,17,2);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (147,1,17,3);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (148,1,17,4);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (151,1,20,5);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (153,1,22,5);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (154,1,2,5);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (155,1,26,5);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (156,1,13,5);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (157,1,15,5);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (158,1,17,5);
INSERT INTO OCT_COUNTRY_PROPERTY (ID,REQUIRED,COUNTRY_ID,PROPERTY_ID) VALUES (160,1,4,5);

/*Table structure for table oct_signature */

CREATE TABLE OCT_SIGNATURE (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  dateOfSignature DATETIME NOT NULL,
  dateOfSignature_msec BIGINT(20) NOT NULL,
  fingerprint VARCHAR(255) NOT NULL,
  UUID VARCHAR(255) NOT NULL,
  countryToSignFor_id BIGINT(20) NOT NULL,
  annexRevision BIGINT(20) NOT NULL,
  signatory_info LONGBLOB,
  PRIMARY KEY (id),
  UNIQUE KEY fingerprint (fingerprint),
  KEY FK64E94196933581F (countryToSignFor_id),
  CONSTRAINT FK64E94196933581F FOREIGN KEY (countryToSignFor_id) REFERENCES OCT_COUNTRY (id)
);

/*Table structure for table oct_settings */
CREATE TABLE OCT_SETTINGS (
  param VARCHAR(128) NOT NULL,
  VALUE VARCHAR(255),
  PRIMARY KEY (param)
);


/*Data for the table oct_settings */

INSERT  INTO OCT_SETTINGS(param,VALUE) VALUES

('callback_url',''),

('facebook_url',''),

('optional_validation','false'),

('show_distribution_map','true'),

('show_progression_bar','true'),

('show_social_media','false'),

('signature_goal','1000000'),

('twitter_url',''),

('color_picker','#FF0000');

/*Table structure for table oct_social_media type */

CREATE TABLE OCT_SOCIAL_MEDIA (
  ID BIGINT(20) NOT NULL,
  NAME VARCHAR(100) NOT NULL,
  PRIMARY KEY (id)
);

/*Data for the table oct_social_media type */

INSERT  INTO OCT_SOCIAL_MEDIA(ID,NAME) VALUES
(1,'facebook'),
(2,'twitter'),
(4,'callForAction');

/*Table structure for table oct_social_media_msg */
CREATE TABLE OCT_SOCIAL_MEDIA_MSG (
  ID BIGINT(20) NOT NULL,
  MEDIA_ID BIGINT(20) NOT NULL,
  LANGUAGE_ID BIGINT(20) NOT NULL,
  MESSAGE VARCHAR(4000) DEFAULT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT SOCIALMEDIALANGUAGEFK FOREIGN KEY (LANGUAGE_ID) REFERENCES OCT_LANG (ID),
  CONSTRAINT SOCIALMEDIANAMEFK FOREIGN KEY (MEDIA_ID) REFERENCES OCT_SOCIAL_MEDIA (ID)
);

insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (25,4,1,'Dejte vědět ostatním');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (26,4,2,'Sig det videre til dine venner');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (27,4,3,'Erzählen Sie Ihren Freunden davon');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (28,4,4,'Jaga sõpradega');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (29,4,5,'Μιλήστε στους φίλους σας');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (30,4,6,'Tell your friends');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (31,4,7,'Comparte con tus amigos');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (32,4,8,'Parlez-en à vos proches');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (33,4,9,'Dillo ai tuoi amici');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (34,4,10,'Pastāstiet draugiem!');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (35,4,11,'Papasakokite draugams');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (36,4,12,'Do chairde a chur ar an eolas');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (37,4,13,'Mondja el ismerőseinek.');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (38,4,14,'Għid lil ħbiebek');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (39,4,15,'Deel dit met vrienden!');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (40,4,16,'Powiedz o tym znajomym');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (41,4,17,'Partilhe com os seus amigos');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (42,4,18,'Transmiteți-le prietenilor');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (43,4,19,'Povedzte o tom svojim priateľom');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (44,4,20,'Povej prijateljem');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (45,4,21,'Jaa eteenpäin');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (46,4,22,'Berätta för dina vänner');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (47,4,23,'Споделете с вашите приятели');
insert into OCT_SOCIAL_MEDIA_MSG(ID,MEDIA_ID,LANGUAGE_ID,MESSAGE) values (48,4,24,'Podijeli s prijateljima');
 
 CREATE TABLE `OCT_FEEDBACK_RANGE` (
  `id` BIGINT(20) NOT NULL,
  `label` VARCHAR(50) NOT NULL,
  `displayOrder` INT (20) NOT NULL,
  `enabled` INT(2) NOT NULL,
  PRIMARY KEY (`id`)
);

/*Data for the table `oct_feedback_range` */

INSERT  INTO `OCT_FEEDBACK_RANGE`(`id`,`label`,`displayOrder`,`enabled`) VALUES
(1,'oct.feedback.bad', 1, 1),
(2,'oct.feedback.fair', 2, 1),
(3,'oct.feedback.fine', 3, 1),
(4,'oct.feedback.good', 4, 1);


CREATE TABLE `OCT_FEEDBACK` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `feedbackDate` DATETIME DEFAULT NULL,
  `feedbackRange_id` BIGINT(20) NOT NULL,
  `feedbackComment` VARCHAR(2000),
  `signatureIdentifier` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `feedbackRangeFK` FOREIGN KEY (`feedbackRange_id`) REFERENCES `OCT_FEEDBACK_RANGE` (`id`)
  );


CREATE TABLE `OCT_STEP_STATE` (
  `id` BIGINT(20) NOT NULL,
  `STRUCTURE` TINYINT(4) DEFAULT NULL,
  `CERTIFICATE` TINYINT(4) DEFAULT NULL,
  `PERSONALISE` TINYINT(4) DEFAULT NULL,
  `SOCIAL` TINYINT(4) DEFAULT NULL,
  `LIVE` TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (`id`)
);

INSERT INTO OCT_STEP_STATE (`ID`, `STRUCTURE`, `CERTIFICATE`, `PERSONALISE`, `SOCIAL`, `LIVE`) VALUES (1, 0, 0, 0, 0, 0);

CREATE TABLE OCT_EXPORT_HISTORY (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  jobId VARCHAR(100),
  exportDate TIMESTAMP NULL DEFAULT NULL,
  batchStatus VARCHAR(100),
  exitStatus VARCHAR(100),
  duration VARCHAR(100),
  countriesParam VARCHAR(2000),
  startDateParam VARCHAR(200),
  endDateParam VARCHAR(200),
  exportProgress INT(20),
  exportSummary VARCHAR(1000),
  validationProgress INT(20),
  validationSummary VARCHAR(1000),
  errorMessage VARCHAR(2000),
  exportDirectoryPath VARCHAR(250),
  isDataQuality INT(1),
  PRIMARY KEY (id)
  );
  
CREATE TABLE OCT_AUTHENTICATION_LOCK (
  username VARCHAR(50) NOT NULL,
  maxAttempts INT(11) NOT NULL,
  timeOfLastFailedAttempt TIMESTAMP NULL DEFAULT NULL,
  lockPeriod INT(11) DEFAULT NULL,
  PRIMARY KEY (username)
);
 
/*Table structure for table oct_translations */
CREATE TABLE IF NOT EXISTS  `OCT_TRANSLATION` (
  `LANG_ID` BIGINT(20) NOT NULL,
  `tr_key` VARCHAR(250) NOT NULL,
  `tr_description` LONGTEXT NOT NULL,
  PRIMARY KEY (`LANG_ID`,`tr_key`),
  KEY `FKTRLSLANGID` (`LANG_ID`),
  CONSTRAINT `FKTRLSLANGID` FOREIGN KEY (`LANG_ID`) REFERENCES `OCT_LANG` (`ID`)
);

INSERT INTO OCT_TRANSLATION VALUES (6,'public.receipt.pdf.title','Statement of support receipt');
INSERT INTO OCT_TRANSLATION VALUES (6,'public.receipt.pdf.date','Date');
INSERT INTO OCT_TRANSLATION VALUES (6,'public.receipt.pdf.signature.id','Signature identifier:');
INSERT INTO OCT_TRANSLATION VALUES (6,'public.receipt.pdf.statement','Please keep the references below for any enquiries to the organisers on your statement of support.');
INSERT INTO OCT_TRANSLATION VALUES (8,'public.receipt.pdf.title','Accusé de réception de la déclaration de soutien');
INSERT INTO OCT_TRANSLATION VALUES (8,'public.receipt.pdf.date','Date:');
INSERT INTO OCT_TRANSLATION VALUES (8,'public.receipt.pdf.signature.id','Identifiant de signature:');
INSERT INTO OCT_TRANSLATION VALUES (8,'public.receipt.pdf.statement','Veuillez conserver les références ci-dessous et les mentionner dans toute demande adressée aux organisateurs concernant votre déclaration de soutien.');
INSERT INTO OCT_TRANSLATION VALUES (23,'public.receipt.pdf.title','Потвърждение за получаване на изявление за подкрепа');
INSERT INTO OCT_TRANSLATION VALUES (23,'public.receipt.pdf.date','Дата:');
INSERT INTO OCT_TRANSLATION VALUES (23,'public.receipt.pdf.signature.id','Идентификационен номер на подписа:');
INSERT INTO OCT_TRANSLATION VALUES (23,'public.receipt.pdf.statement','Моля, запишете си данните по-долу. Те могат да ви потрябват, ако имате въпроси към организаторите относно вашето изявление за подкрепа.');

CREATE TABLE IF NOT EXISTS `HIBERNATE_SEQUENCES` (
  `sequence_name` VARCHAR(50) NOT NULL,
  `sequence_next_hi_value` BIGINT(20) NOT NULL,
    PRIMARY KEY (`sequence_name`)
);

INSERT INTO HIBERNATE_SEQUENCES(sequence_name, sequence_next_hi_value) VALUES ('feedback_id', 1);
INSERT INTO HIBERNATE_SEQUENCES(sequence_name, sequence_next_hi_value) VALUES ('initiative_description_id', 1);
INSERT INTO HIBERNATE_SEQUENCES(sequence_name, sequence_next_hi_value) VALUES ('contact_id', 1);
INSERT INTO HIBERNATE_SEQUENCES(sequence_name, sequence_next_hi_value) VALUES ('signature_id', 1);
INSERT INTO HIBERNATE_SEQUENCES(sequence_name, sequence_next_hi_value) VALUES ('social_media_message_id', 49);
INSERT INTO HIBERNATE_SEQUENCES(sequence_name, sequence_next_hi_value) VALUES ('identity_value_id', 1);
INSERT INTO HIBERNATE_SEQUENCES(sequence_name, sequence_next_hi_value) VALUES ('account_id', 1);
INSERT INTO HIBERNATE_SEQUENCES(sequence_name, sequence_next_hi_value) VALUES ('email_id', 1);

CREATE VIEW `SIGBYCOUNTRYVIEW`  AS

	SELECT    COUNT(S.ID) AS SOS,
	          MONTH(S.DATEOFSIGNATURE) AS MONTH,
	          YEAR(S.DATEOFSIGNATURE) AS YEAR,
	          C.CODE AS CODE
	FROM      OCT_SIGNATURE S RIGHT JOIN OCT_COUNTRY C ON C.ID = S.COUNTRYTOSIGNFOR_ID
	GROUP BY  C.CODE, MONTH, YEAR;

/* last supporters view */
CREATE VIEW `LASTSIGNATURESVIEW` AS
(
	SELECT id AS SIGNATUREID
	FROM OCT_SIGNATURE ORDER BY id DESC LIMIT 5
);

CREATE VIEW `FASTSIGNATURECOUNTVIEW` AS

	SELECT    	C.ID AS COUNTRYID, 
        		COUNT(*) AS COUNT,
       	 		C.THRESHOLD AS THRESHOLD,
        		C.CODE AS COUNTRYCODE
	FROM      	OCT_SIGNATURE S JOIN OCT_COUNTRY C ON C.ID = S.COUNTRYTOSIGNFOR_ID
	GROUP BY  	C.ID, C.THRESHOLD, C.CODE
	UNION
	SELECT    	99 AS COUNTRYID, 
	        	COUNT(*) AS COUNT,
	       	 	NULL AS THRESHOLD,
	        	NULL AS COUNTRYCODE
	FROM      	OCT_SIGNATURE
;

CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT ,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	CONSTRAINT JOB_INST_UN UNIQUE (JOB_NAME, JOB_KEY)
);

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT  ,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME NOT NULL,
	START_TIME DATETIME DEFAULT NULL ,
	END_TIME DATETIME DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME,
	JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
	CONSTRAINT JOB_INST_EXEC_FK FOREIGN KEY (JOB_INSTANCE_ID)
	REFERENCES BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	TYPE_CD VARCHAR(6) NOT NULL ,
	KEY_NAME VARCHAR(100) NOT NULL ,
	STRING_VAL VARCHAR(500) ,
	DATE_VAL DATETIME DEFAULT NULL ,
	LONG_VAL BIGINT ,
	DOUBLE_VAL DOUBLE PRECISION ,
	IDENTIFYING CHAR(1) NOT NULL ,
	CONSTRAINT JOB_EXEC_PARAMS_FK FOREIGN KEY (JOB_EXECUTION_ID)
	REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	START_TIME DATETIME NOT NULL ,
	END_TIME DATETIME DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	COMMIT_COUNT BIGINT ,
	READ_COUNT BIGINT ,
	FILTER_COUNT BIGINT ,
	WRITE_COUNT BIGINT ,
	READ_SKIP_COUNT BIGINT ,
	WRITE_SKIP_COUNT BIGINT ,
	PROCESS_SKIP_COUNT BIGINT ,
	ROLLBACK_COUNT BIGINT ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME,
	CONSTRAINT JOB_EXEC_STEP_FK FOREIGN KEY (JOB_EXECUTION_ID)
	REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	CONSTRAINT STEP_EXEC_CTX_FK FOREIGN KEY (STEP_EXECUTION_ID)
	REFERENCES BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	CONSTRAINT JOB_EXEC_CTX_FK FOREIGN KEY (JOB_EXECUTION_ID)
	REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	CONSTRAINT UNIQUE_KEY_UN UNIQUE (UNIQUE_KEY)
) ENGINE=INNODB;

INSERT INTO BATCH_STEP_EXECUTION_SEQ (ID, UNIQUE_KEY) SELECT * FROM (SELECT 0 AS ID, '0' AS UNIQUE_KEY) AS tmp WHERE NOT EXISTS(SELECT * FROM BATCH_STEP_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	CONSTRAINT UNIQUE_KEY_UN UNIQUE (UNIQUE_KEY)
);

INSERT INTO BATCH_JOB_EXECUTION_SEQ (ID, UNIQUE_KEY) SELECT * FROM (SELECT 0 AS ID, '0' AS UNIQUE_KEY) AS tmp WHERE NOT EXISTS(SELECT * FROM BATCH_JOB_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	CONSTRAINT UNIQUE_KEY_UN UNIQUE (UNIQUE_KEY)
);

INSERT INTO BATCH_JOB_SEQ (ID, UNIQUE_KEY) SELECT * FROM (SELECT 0 AS ID, '0' AS UNIQUE_KEY) AS tmp WHERE NOT EXISTS(SELECT * FROM BATCH_JOB_SEQ);


CREATE TABLE OCT_IDENTITY_VALUE (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  COUNTRYCODE VARCHAR(2),
  PROPERTYID BIGINT(20),
  IDENTITYVALUE VARCHAR(2054),
  PRIMARY KEY (id)
  );
  
  CREATE TABLE OCT_EMAIL (
  ID BIGINT(20) NOT NULL,
  COMUNICATIONLANGUAGE VARCHAR(2) NOT NULL,
  EMAILADDRESS VARCHAR(250) NOT NULL,
  SIGNATUREIDENTIFIER VARCHAR(255) NOT NULL,
  INITIATIVESUBSCRIPTION TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE OCT_COUNTRY_RULE
(
  ID BIGINT(20) NOT NULL,
  CODE VARCHAR(255) NOT NULL,
  LAST_UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  RULE LONGTEXT,
  PRIMARY KEY (ID)
);

DELIMITER ;;
CREATE TRIGGER `TRIGGER_OCT_COUNTRY_RULE` BEFORE UPDATE ON `OCT_COUNTRY_RULE` FOR EACH ROW
BEGIN
    SET NEW.LAST_UPDATE_DATE = NOW();
END;;
DELIMITER ;


/** RULES SCRIPT **/

SET SQL_MODE = NO_BACKSLASH_ESCAPES;

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (1,'pl','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.national.id.number"
    dialect "java"
    when
        v : ValidationProperty(key == "national.id.number", value == null || value not matches "[0-9]{11}" )
    then
        validationResult.addValidationError("national.id.number","oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (2,'fr','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;

rule "rule_oct.property.postal.code_fr"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value not matches "[0-9]{5}")
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (3,'ro','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        v : ValidationProperty(key == "id.card", value == null || value.toLowerCase() not matches "[a-z]{2}[0-9]{6}" )
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.passport"
    dialect "java"
    when
        v : ValidationProperty(key == "passport", value == null || value.toLowerCase() not matches "[a-z0-9]*")
    then
        validationResult.addValidationError("passport","oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.personal.id"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.id", value == null || value not matches "[0-9]{13}")
    then
        validationResult.addValidationError("personal.id","oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (4,'at','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        v : ValidationProperty(key == "id.card", value == null || value not matches "[0-9]{7}|[0-9]{8}")
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.passport"
    dialect "java"
    when
        v : ValidationProperty(key == "passport", value == null || value.toLowerCase() not matches "[a-z][0-9]{7,8}")
    then
        validationResult.addValidationError("passport","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (5,'lv','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.permanent.residence"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.id", value == null || value not matches "[0-9]{6}[0-9]{5}")
    then
        validationResult.addValidationError("personal.id","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (6,'bg','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.personal.number"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.number", value == null || value not matches "[0-9]{10}" )
    then
        validationResult.addValidationError("personal.number","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (7,'cy','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        v : ValidationProperty(key == "id.card", value == null || value not matches "[0-9]{1,10}" )
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.passport"
    dialect "java"
    when
        v : ValidationProperty(key == "passport", value == null || value.toLowerCase() not matches "([bcej][0-9]{6})|(k[0-9]{8})|([ds]p[0-9]{7})")
    then

        validationResult.addValidationError("passport","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (8,'lt','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.personal.number"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.number", value == null || value not matches "[0-9]{11}" )
    then
        validationResult.addValidationError("personal.number","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (9,'mt','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        v : ValidationProperty(key == "id.card", value == null || value.toLowerCase() not matches "[a-z0-9]*" )
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (10,'pt','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        v : ValidationProperty(key == "id.card", value == null || value not matches "[0-9]{1,8}" )
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.citizens.card"
    dialect "java"
    when
        v : ValidationProperty(key == "citizens.card", value == null || value.toLowerCase() not matches "[0-9]{9}[a-z]{2}[0-9]" )
    then
        validationResult.addValidationError("citizens.card","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.passport"
    dialect "java"
    when
        v : ValidationProperty(key == "passport", value == null || value.toLowerCase() not matches "([a-z]{1}[0-9]{6})|([a-z]{2}[0-9]{6})")
    then
        validationResult.addValidationError("passport","oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (11,'si','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.personal.number"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.number", value == null || value not matches "[0-9]{13}" )
    then
        validationResult.addValidationError("personal.number","oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (12,'cz','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        v : ValidationProperty(key == "id.card", value == null || value not matches "([0-9]{9})|([0-9]{6}[a-z]{2}[0-9]{2})|([0-9]{6}[a-z]{2})|([a-z]{2}[0-9]{6})" )
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.passport"
    dialect "java"
    when
        v : ValidationProperty(key == "passport", value == null || value not matches "[0-9]{7,8}")
    then
        validationResult.addValidationError("passport","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (13,'es','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        v : ValidationProperty(key == "id.card", value == null || value.toLowerCase() not matches "[0-9]{8}[a-z]" )
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.passport"
    dialect "java"
    when
        v : ValidationProperty(key == "passport", value == null || value.toLowerCase() not matches "[a-z0-9]*")
    then
        validationResult.addValidationError("passport","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (14,'hu','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        sf : ValidationProperty(key == "id.card", value == null || value.toLowerCase() not matches "([0-9]{6}[a-z]{2})|([a-z]{2}[a-z][0-9]{6})|([a-z]{2}[a-z]{2}[0-9]{6})|([a-z]{2}[a-z]{3}[0-9]{6})|([a-z]{2}[0-9]{6})" )
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.passport"
    dialect "java"
    when
        v : ValidationProperty(key == "passport", value == null || value.toLowerCase() not matches "([a-z]{2}[0-9]{6})|([a-z]{2}[0-9]{7})")
    then
        validationResult.addValidationError("passport","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.personal.number"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.number", value == null ||  value not matches "[0-9][0-9]{6}[0-9]{4}" )
    then
        validationResult.addValidationError("personal.number","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');


INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (15,'se','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.personal.number"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.number", value == null || value not matches "([0-9]{8}-[0-9]{4}|[0-9]{6}-[0-9]{4}|[0-9]{12}|[0-9]{10})" )
    then
        validationResult.addValidationError("personal.number","oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (16,'it','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.id.card"
    dialect "java"
    when
        v : ValidationProperty(key == "id.card", value == null || value.toLowerCase() not matches "([a-z]{2}[0-9]{6,8})|([0-9]{7}[a-z]{2})|([a-z]{2}[0-9]{5}[a-z]{2})" )
    then
        validationResult.addValidationError("id.card","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.issuing.authority"
    dialect "java"
    when
        v : ValidationProperty(key == "issuing.authority", value == null || value.empty == true)
    then
        validationResult.addValidationError("issuing.authority","oct.empty.property", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.passport"
    dialect "java"
    when
        v : ValidationProperty(key == "passport", value == null || value.toLowerCase() not matches "([a-z]{2}[0-9]{7})|([a-z][0-9]{6})|([0-9]{6}[a-z])")
    then
        validationResult.addValidationError("passport","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (17,'hr','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.personal.id"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.id", value == null || value not matches "[0-9]{11}")
    then
        validationResult.addValidationError("personal.id","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (18,'de','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.postal.code_de"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value not matches "[0-9]{5}")
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (20,'lu','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.postal.code_lu"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value not matches "[0-9]{4}")
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (21,'nl','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.postal.code_nl"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value.toLowerCase() not matches "[1-9][0-9]{3}[a-z]{2}")
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (22,'sk','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.postal.code_sk"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value not matches "[089][0-9]{4}")
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch",ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (23,'dk','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.postal.code_dk"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value not matches "[0-9]{4}")
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (24,'be','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.national.id.number"
    dialect "java"
    when
        v : ValidationProperty(key == "national.id.number", value == null || value not matches "([0-9][0-9]).(0?0[1-9]|1[0-2]).([0-2]?[0-2][0-9]|3[0-1])-[0-9]{3}.[0-9]{2}" )
    then
        validationResult.addValidationError("national.id.number","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (25,'ee','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.personal.number"
    dialect "java"
    when
        v : ValidationProperty(key == "personal.number", value == null || value not matches "[0-9]{11}" )
    then
        validationResult.addValidationError("personal.number","oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (26,'fi','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.postal.code_fi"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value not matches "[0-9]{5}")
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (27,'ie','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.postal.code_ie"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null)
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (28,'gr','package eu.europa.ec.eci.oct.validation
global ValidationResult validationResult;
rule "rule_oct.property.postal.code_gr"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value not matches "[0-9]{5}")
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
');

INSERT INTO OCT_COUNTRY_RULE (ID,CODE,RULE) VALUES (100,'common','package eu.europa.ec.eci.oct.validation
import java.util.Date
import java.util.Calendar
import java.text.SimpleDateFormat;
global ValidationResult validationResult;
global String countryOfResidence;
global String nationality;

rule "rule_oct.property.postal.code"
    dialect "java"
    when
        v : ValidationProperty(key == "postal.code", value == null || value.empty == true || value.length  > 10)
    then
        validationResult.addValidationError("postal.code", "oct.error.propertytypemismatch", ValidationConstants.SKIPPABLE);
end
rule "rule_oct.property.street"
    dialect "java"
    when
        v : ValidationProperty(key == "street",  value == null ||  value.empty == true )
    then
        validationResult.addValidationError("street","oct.empty.property", ValidationConstants.NOT_SKIPPABLE);
end
rule "rule_oct.property.street.number"
    dialect "java"
    when
        v : ValidationProperty(key == "street.number",  value == null || value.empty == true )
    then
        validationResult.addValidationError("street.number","oct.empty.property", ValidationConstants.NOT_SKIPPABLE);
end
rule "rule_oct.property.city"
    dialect "java"
    when
        v : ValidationProperty(key == "city",  value == null || value.empty == true )
    then
        validationResult.addValidationError("city","oct.empty.property", ValidationConstants.NOT_SKIPPABLE);
end
rule "rule_oct.property.family.names"
    dialect "java"

    when
        v : ValidationProperty(key == "family.names", value == null || value.empty == true )
    then
        validationResult.addValidationError("family.names","oct.empty.property", ValidationConstants.NOT_SKIPPABLE);
end
rule "rule_oct.property.full.first.names"
    dialect "java"
    when
        v : ValidationProperty(key == "full.first.names",  value == null || value.empty == true )
    then
        validationResult.addValidationError("full.first.names","oct.empty.property", ValidationConstants.NOT_SKIPPABLE);
end
rule "rule_oct.property.country"
    dialect "java"
    when
        v : ValidationProperty(key == "country",  value == null || value.empty == true )
    then
        validationResult.addValidationError("country","oct.empty.property", ValidationConstants.NOT_SKIPPABLE);
end

rule "rule_oct.property.date.of.birth"
    dialect "java"
    when
        v : ValidationProperty(key == "date.of.birth", (value == null || value.empty == true || !isAbleToVoteByMS(nationality, value)))
    then
        validationResult.addValidationError("date.of.birth","oct.error.invalidrange", ValidationConstants.NOT_SKIPPABLE);
end

function boolean isAbleToVoteByMS(String countryCode, String value){
    boolean hasPassed = false;
    switch (countryCode){
        case "at":
        case "mt":
		case "lu":
		case "ee":
            hasPassed = isInRangeByDDMMYYY_date(16, value);
            break;
        case "gr":
            hasPassed = isInRangeByYYYY_date(17, value);
            break;
        default:
            hasPassed = isInRangeByDDMMYYY_date(18, value);
            break;
    }
    return hasPassed;
}

function boolean isInRangeByDDMMYYY_date(int years, String value){
    Long bDateTime = new SimpleDateFormat("dd/MM/yyyy").parse(value).getTime();
    Date currentDate = new Date();
    Calendar cal = Calendar.getInstance();
    cal.setTime(currentDate);
    cal.add(Calendar.YEAR, -years);
    Date modifiedDate = cal.getTime();
    return modifiedDate.getTime() >= bDateTime;
}

function boolean isInRangeByYYYY_date(int years, String value){
    Calendar nimYear = Calendar.getInstance();
    nimYear.setTime(new Date());
    nimYear.add(Calendar.YEAR, -years);
    Calendar userYear = Calendar.getInstance();
    userYear.setTime(new SimpleDateFormat("dd/MM/yyyy").parse(value));
    if((nimYear.get(Calendar.YEAR) - userYear.get(Calendar.YEAR)) >= 0){
        return true;
    }else{
        return false;
    }
}

');
